{
	"info": {
		"_postman_id": "123a4c00-9d8e-4eeb-8f78-e670a0ca38a0",
		"name": "2_login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32977297"
	},
	"item": [
		{
			"name": "Login success",
			"item": [
				{
					"name": "signup - sucess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Passei aqui antes de fazer a requisição!\")\r",
									"\r",
									"function firstName() {\r",
									"    let firstName = [\"Rebeca\", \"William\", \"João\", \"Maria\", \"Mithras\", \"Karla\", \"Yasmin\", \"Raissa\", \"Liza\", \"Rodrigo\", \"Adriano\", \"Gledson\", \"Raquel\", \"Inês\", \"Santiago\", \"Ana\", \"Carolina\", \"Fernando\", \"Elisa\", \"Thiago\", \"Maria\", \"Carmem\", \"Daniel\", \"Michel\", \"Henrique\", \"Cleberson\", \"Eduardo\", \"Helena\", \"Bernardo\", \"Leandro\", \"Elisabeth\", \"León\", \"Luiz\", \"Luis\", \"Cristina\", \"Luisa\"];\r",
									"\r",
									"    let randomItem = firstName [Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"    let lastName = [\"Alves de Souza\", \"Silva Santos\", \"Alves da Silva\", \"de Souza\", \"Silva Junior\", \"Henrique de Lima\", \"Joaquim de Carvalho\", \"Soares de Lima\", \"Neto de João\", \"Aguinaldo da Silva\", \"Souza Diamantino\", \"Oliveira dos Santos\", \"Patricio Antunes\", \"dos Arcanjos\", \"Antunes de Souza\", \"Homem de Melo\"];\r",
									"\r",
									"    let randomItem = lastName [Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName())\r",
									"\r",
									"pm.environment.set(\"FullName\",pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))\r",
									"\r",
									"console.log(pm.environment.get(\"FirstName\"))\r",
									"console.log(pm.environment.get(\"LastName\"))\r",
									"console.log(pm.environment.get(\"FullName\"))\r",
									"\r",
									"function accessProfile() {\r",
									"    let accessProfile = [\"ADMIN\", \"FINANCEIRO\", \"ADMINISTRATIVO\", \"TI\", \"CONTROLADORIA\"];\r",
									"\r",
									"    let randomItem = accessProfile [Math.floor(Math.random() * accessProfile.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"AccessProfile\", accessProfile())\r",
									"\r",
									"console.log(pm.environment.get(\"AccessProfile\"))\r",
									"\r",
									"function providerMail() {\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@outlook.com\", \"@hotmail.com\", \"@uol.com.br\"];\r",
									"\r",
									"    let randomItem = providerMail [Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail())\r",
									"\r",
									"console.log(pm.environment.get(\"ProviderMail\"))\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\"+ pm.variables.replaceIn('{{$guid}}') + pm.environment.get(\"ProviderMail\"))\r",
									"\r",
									"console.log(pm.environment.get(\"Email\"))\r",
									"\r",
									"//pm.environment.set(\"Mail\", pm.variables.replaceIn(`{{$randomEmail}}`))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Passei aqui após fazer a requisição\")\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is token exist\", function (){\r",
									"    pm.expect(pm.response.json().token).to.exist;\r",
									"});\r",
									"\r",
									"pm.environment.set(\"Token\", pm.response.json().token);\r",
									"\r",
									"pm.test(\"Check is fullName true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(pm.response.json().user.fullName);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is mail true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Mail\")).to.eql(pm.response.json().user.mail);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(pm.response.json().user.accessProfile);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is status true\", function () {\r",
									"    pm.expect(true).to.eql(pm.response.json().user.status);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"accessProfile\": \"{{AccessProfile}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "login - sucess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Passei aqui antes de fazer a requisição!\")\r",
									"\r",
									"function firstName() {\r",
									"    let firstName = [\"Rebeca\", \"William\", \"João\", \"Maria\", \"Mithras\", \"Karla\", \"Yasmin\", \"Raissa\", \"Liza\", \"Rodrigo\", \"Adriano\", \"Gledson\", \"Raquel\", \"Inês\", \"Santiago\", \"Ana\", \"Carolina\", \"Fernando\", \"Elisa\", \"Thiago\", \"Maria\", \"Carmem\", \"Daniel\", \"Michel\", \"Henrique\", \"Cleberson\", \"Eduardo\", \"Helena\", \"Bernardo\", \"Leandro\", \"Elisabeth\", \"León\", \"Luiz\", \"Luis\", \"Cristina\", \"Luisa\"];\r",
									"\r",
									"    let randomItem = firstName [Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"    let lastName = [\"Alves de Souza\", \"Silva Santos\", \"Alves da Silva\", \"de Souza\", \"Silva Junior\", \"Henrique de Lima\", \"Joaquim de Carvalho\", \"Soares de Lima\", \"Neto de João\", \"Aguinaldo da Silva\", \"Souza Diamantino\", \"Oliveira dos Santos\", \"Patricio Antunes\", \"dos Arcanjos\", \"Antunes de Souza\", \"Homem de Melo\"];\r",
									"\r",
									"    let randomItem = lastName [Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName())\r",
									"\r",
									"pm.environment.set(\"FullName\",pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))\r",
									"\r",
									"console.log(pm.environment.get(\"FirstName\"))\r",
									"console.log(pm.environment.get(\"LastName\"))\r",
									"console.log(pm.environment.get(\"FullName\"))\r",
									"\r",
									"function accessProfile() {\r",
									"    let accessProfile = [\"ADMIN\", \"FINANCEIRO\", \"ADMINISTRATIVO\", \"TI\", \"CONTROLADORIA\"];\r",
									"\r",
									"    let randomItem = accessProfile [Math.floor(Math.random() * accessProfile.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"AccessProfile\", accessProfile())\r",
									"\r",
									"console.log(pm.environment.get(\"AccessProfile\"))\r",
									"\r",
									"function providerMail() {\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@outlook.com\", \"@hotmail.com\", \"@uol.com.br\"];\r",
									"\r",
									"    let randomItem = providerMail [Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail())\r",
									"\r",
									"console.log(pm.environment.get(\"ProviderMail\"))\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\"+ pm.variables.replaceIn('{{$guid}}') + pm.environment.get(\"ProviderMail\"))\r",
									"\r",
									"console.log(pm.environment.get(\"Email\"))\r",
									"\r",
									"//pm.environment.set(\"Mail\", pm.variables.replaceIn(`{{$randomEmail}}`))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Passei aqui após fazer a requisição\")\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is token exist\", function (){\r",
									"    pm.expect(pm.response.json().token).to.exist;\r",
									"});\r",
									"\r",
									"pm.environment.set(\"Token\", pm.response.json().token);\r",
									"\r",
									"pm.test(\"Check is fullName true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(pm.response.json().user.fullName);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is mail true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Mail\")).to.eql(pm.response.json().user.mail);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(pm.response.json().user.accessProfile);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is status true\", function () {\r",
									"    pm.expect(true).to.eql(pm.response.json().user.status);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"accessProfile\": \"{{AccessProfile}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}